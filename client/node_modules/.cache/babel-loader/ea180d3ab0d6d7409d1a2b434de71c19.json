{"ast":null,"code":"var _jsxFileName = \"c:\\\\projeler\\\\VTEmaily\\\\server\\\\client\\\\src\\\\components\\\\surveys\\\\SurveyList.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchSurveys } from '../../actions';\n\nclass SurveyList extends Component {\n  componentDidMount() {\n    this.props.fetchSurveys();\n  }\n\n  renderSurveys() {\n    const emptyMessage = React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: {\n        marginTop: 80\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }), React.createElement(\"h4\", {\n      style: {\n        color: 'white'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, \"You don't have a survey yet, but you can create a new one from the plus button below.\"), React.createElement(\"p\", {\n      style: {\n        marginTop: 100\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"sorry\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"SORRY\", React.createElement(\"i\", {\n      style: {},\n      className: \"medium material-icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"sentiment_dissatisfied\")));\n\n    if (this.props.surveys.length === 0) {\n      return emptyMessage;\n    } else return this.props.surveys.reverse().map(survey => {\n      return React.createElement(\"div\", {\n        className: \"card blue-grey darken-1\",\n        key: survey._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, survey.title), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, survey.body), React.createElement(\"p\", {\n        className: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Sent On: \", new Date(survey.dateSent).toLocaleDateString())), React.createElement(\"div\", {\n        className: \"card-action\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Yes: \", survey.yes), React.createElement(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"No: \", survey.no)));\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      style: {\n        color: 'white'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Dashboard\"), this.renderSurveys()));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    surveys: state.surveys\n  };\n}\n\nexport default connect(mapStateToProps, {\n  fetchSurveys\n})(SurveyList);","map":{"version":3,"sources":["c:\\projeler\\VTEmaily\\server\\client\\src\\components\\surveys\\SurveyList.js"],"names":["React","Component","connect","fetchSurveys","SurveyList","componentDidMount","props","renderSurveys","emptyMessage","marginTop","color","surveys","length","reverse","map","survey","_id","title","body","Date","dateSent","toLocaleDateString","yes","no","render","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchSurveys } from '../../actions';\r\n\r\nclass SurveyList extends Component {\r\ncomponentDidMount(){\r\n    this.props.fetchSurveys();\r\n}\r\n\r\n    renderSurveys() {\r\n        const emptyMessage = (\r\n            <div className=\"row\">\r\n                <p style={{marginTop:80}}></p>\r\n                 <h4 style={{color:'white'}}>\r\n                You don't have a survey yet, but you can create a new one from\r\n                the plus button below.\r\n                </h4>\r\n\r\n                <p style={{marginTop:100}}></p>\r\n                <span className=\"sorry\">\r\n                     SORRY   \r\n                 <i style={{}} className=\"medium material-icons\">sentiment_dissatisfied</i> \r\n                 </span>\r\n            </div>\r\n            \r\n            \r\n           \r\n        );\r\n        \r\n            if(this.props.surveys.length === 0){\r\n                return(\r\n                   emptyMessage\r\n                );\r\n            }\r\n            else\r\n                return this.props.surveys.reverse().map(survey => {\r\n                    return (\r\n                         <div className=\"card blue-grey darken-1\" key={survey._id}>\r\n                              <div className=\"card-content\">\r\n                                 <span className=\"card-title\">{survey.title}</span>\r\n                                    <p>\r\n                                        {survey.body}\r\n                                    </p>\r\n                                    <p className=\"right\">\r\n                                        Sent On: {new Date(survey.dateSent).toLocaleDateString()}\r\n                                    </p>\r\n                                </div>\r\n                                <div className=\"card-action\">\r\n                                <a>Yes: {survey.yes}</a>\r\n                                <a>No: {survey.no}</a>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    });\r\n                  \r\n        \r\n       \r\n    \r\n        \r\n    }\r\n    \r\n\r\n    render() {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                <h3 style={{ color: 'white'}}>Dashboard</h3>\r\n                {this.renderSurveys()}\r\n                </div>\r\n        \r\n            </div>\r\n           \r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return { surveys: state.surveys };\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchSurveys})(SurveyList);"]},"metadata":{},"sourceType":"module"}